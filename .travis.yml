sudo: required
dist: trusty
group: deprecated-2017Q3
os: linux
language: generic

cache:
  apt: true
  ccache: true
  directories:
    - depends/built
    - depends/sdk-sources
    - "$HOME/.ccache"

env:
  global:
    - MAKEJOBS=-j5
    - RUN_TESTS=false
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=400M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
  matrix:
    - HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
    - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" PYZMQ=true
    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_DASH_DEBUG" PYZMQ=true
    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4" WINE=true
    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4" WINE=true

before_install:
    - travis_retry sudo apt-get install python-dev
    - travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - unset CC; unset CXX
    - unset DISPLAY
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.xz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.xz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=omnix VERSION=$HOST
    - cd omnix-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" -a "$WINE" != "true" ]; then make $MAKEJOBS check VERBOSE=1; fi
    - if [ "$RUN_TESTS" = "true" -a "$WINE" = "true" ]; then wine src/test/test_omnix.exe; fi
    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then (echo "Upload goes here. Something like: scp -r $BASE_OUTDIR server" || echo "upload failed"); fi
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
before_deploy:
    - tar -cvzf $HOST.tar.gz $OUTDIR
    - git tag "$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
deploy:
  provider: releases
  api_key:
    secure: "O+HXzG9tt22FEiKXlT3sB8HA3Rinv21KtA2ORztudQmjEzKl20vBgj2QcDqU01IwPGbHGs2jM/bjeFpo4/IAoyq8U0uwKvYr5D2uCQzKO2K5y+NR1HEPZTrogTYMk9BDP2SV3hSQdc/QBYwemMnSc3RQMmSJMneuBum3R+Y02rkEuf5xkoR7Ol/ysmScjgHg+e/uKWMFYsGOp4sMPrgpx3NOKwv53uGeTxA2RxR8N5uoNwVjuKI4wJSjLDM8VuG2Vjk0yhH2YZCNdHik/c7M9TFUT+buugTl2nHRw0hRy18I4hKURbUsrV+iFyqK1b52NhXHX7J1BJ7BdN4B94VRXO1ujUkJhNzaIBmoDbI1HC/8lnLR40Gkpisqq6fpJXhXl0QAJhHyLf4T3uE0o3uTJ8rhgzTZzj581y2an8nxGtq0SPjqDiv3+eH/LSpuuHggvRQrO+3hQDZw8r1DCj87n0IcR67xPNdY9l7Z9tM1JtkJ5Knqm+3817HoQbniw49+bA+kcX0IyHiVQotPLuMY7MenleVA3VOvvwWes323ceSYzX0nR9JNRZgfmRHX2Ix00ors5jk9TAjgZy1nOzIRGx44YTJtp+kG/Op5Tk5iKzp9ZH/RkAWbrK4Hxth8jwBCDAAgtrHrwY06R+eiW4awG+YU3YrjVfTSNO6dhuSPhBk="
  skip_cleanup: true
  file_glob: true
  file:
     - $HOST.tar.gz
  on:
    repo: Omnix/Omnix-Core
